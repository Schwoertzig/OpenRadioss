//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2023 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
//
// /LOAD/HISTORY 
//

ATTRIBUTES(COMMON)
{
    // INPUT ATTRIBUTES

    //  Card
    Grnod_ID            = VALUE(SETS,"Node group identifier") { SUBTYPES = (/SETS/GRNOD) ; }
    deltaT              = VALUE(FLOAT,"Time step for saving the data");
    tstart              = VALUE(FLOAT,"Start Time");
    tstop              = VALUE(FLOAT,"Stop Time");
    file_name           = VALUE(STRING,"Root name of the file which contains the flag output. The extension for this file is nameSC01");
    Grelem_id          = VALUE(SETS,"Brick group identifier")     { SUBTYPES = (/SETS/GRBRIC, /SETS/GRQUAD) ; }
    int_id              = ARRAY [10] ( GROUP, "Optional interface identifiers" );
// HM INTERNAL
    form                = VALUE(INT, "Formulation READ WRITE","form");
    KEYWORD_STR         = VALUE(STRING, "Solver Keyword");
    TITLE               = VALUE(STRING, "TITLE");
    IO_FLAG             = VALUE(INT, "IOFLAG");
    _dummy              = VALUE(STRING, "");
}


GUI(COMMON)
{

    ASSIGN(KEYWORD_STR, "/LOAD/HISTORY");

    RADIO(form, "form")
    {
      ADD(1,"WRITE");
      ADD(2,"READ");
    }

    if(form == 1)
    {
      ASSIGN(KEYWORD_STR, "/WRITE/");
    }
    else if(form == 2)
    {
      ASSIGN(KEYWORD_STR, "/READ/");
    }

    //Title Card
    SCALAR(TITLE, "TITLE");

    //  Card
    ARRAY(10,"Optional interface identifiers")
    {
        DATA(int_id);
    }



}

// File format
FORMAT(radioss2023)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);

    if(IO_FLAG == 0)
    {
       if(form == 1)
         HEADER("/LOAD/HISTORY/WRITE/%-d", _ID_);

       if(form == 2)
         HEADER("/LOAD/HISTORY/READ/%-d", _ID_);
    }
    else  // IMPORT
    {
       HEADER("/LOAD/HISTORY/%-s/%d",_dummy, _ID_);

       if(_dummy == "WRITE")
       {
           ASSIGN(form,1,IMPORT);
       }
       else if(_dummy == "READ")
       {
           ASSIGN(form,2,IMPORT);
       }
    }

    //  Card
    if(_dummy == "WRITE"){
      CARD("%-100s", TITLE);
      COMMENT("# grnod_ID grelem_id             dt_hist              Tstart               Tstop");
      CARD("%10d%10d%10s%20lg%20lg%20lg",Grnod_ID,Grelem_id,_BLANK_,deltaT,tstart,tstop);
      COMMENT("# filename");
      CARD("%-100s",file_name);
      COMMENT("#     int1      int2      int3      int4      int5      int6      int7      int8      int9     int10");
      CELL_LIST(10,"%10d",int_id,100);
      }
    if(_dummy == "READ"){
      CARD("%-100s", TITLE);
      COMMENT("#file_name");
      CARD("%-100s",file_name);
      COMMENT("#             Tstart               Tstop");
      CARD("%20lg%20lg",tstart,tstop);
      }
}