//Copyright>    CFG Files and Library ("CFG")
//Copyright>    Copyright (C) 1986-2025 Altair Engineering Inc.
//Copyright>
//Copyright>    Altair Engineering Inc. grants to third parties limited permission to
//Copyright>    use and modify CFG solely in connection with OpenRadioss software, provided
//Copyright>    that any modification to CFG by a third party must be provided back to
//Copyright>    Altair Engineering Inc. and shall be deemed a Contribution under and therefore
//Copyright>    subject to the CONTRIBUTOR LICENSE AGREEMENT for OpenRadioss software.
//Copyright>
//Copyright>    CFG IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
//Copyright>    INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
//Copyright>    A PARTICULAR PURPOSE, AND NONINFRINGEMENT.  IN NO EVENT SHALL ALTAIR ENGINEERING
//Copyright>    INC. OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES, OR OTHER LIABILITY,
//Copyright>    WHETHER IN AN ACTION OF CONTRACT, TORT, OR OTHERWISE, ARISING FROM, OUT OF, OR
//Copyright>    IN CONNECTION WITH CFG OR THE USE OR OTHER DEALINGS IN CFG.
ATTRIBUTES(COMMON)
{
    ALE_SOLVER_MMALE                      = VALUE(INT,  "Formulation identifier");
    ALE_SURF_SETID                        = VALUE(INT,  "Optionnal Set ID for SURF(S) selection (MMALE=3)");
    /* ================================ HM =================================*/
    IO_FLAG                 = VALUE(INT, "");
    KEYWORD_STR             = VALUE(STRING, "Solver Keyword");
}

SKEYWORDS_IDENTIFIER(COMMON)
{
    KEYWORD_STR              = 9000;
    ALE_SOLVER_MMALE         = 2624;
    ALE_SURF_SETID           = 2625;
    IO_FLAG                  = -1;
}

DEFAULTS(COMMON)
{
    ALE_SOLVER_MMALE        = 1;
    ALE_SURF_SETID          =0 ;
}

GUI(COMMON)
{
    ASSIGN(KEYWORD_STR, "ALE_CFD_SPH_CARD");
    ASSIGN(KEYWORD_STR, "/ALE/SOLVER/MULTIMAT");
    SEPARATOR("ALE_SOLVER_MULTIMAT");
    RADIO(ALE_SOLVER_MMALE,"MM-ALE Formulation Flag")
    {
        ADD(1,"1: Staggered Upwind advection + von Neumannâ€“Richtmyer artificial viscosity + diffuse interface method");
        ADD(2,"2: Collocated HLLC + diffuse interface method");
        ADD(3,"3: Collocated HLLC + lagrangian interface tracking");
    }
    SEPARATOR("");
}
FORMAT(radioss2026)
{
    ASSIGN(IO_FLAG,0,EXPORT);
    ASSIGN(IO_FLAG,1,IMPORT);
    
    if(IO_FLAG == 0)
    {
        HEADER ("/ALE/SOLVER/MULTIMAT");
    }
    COMMENT("#    MMALE   SURF_ID");
    CARD ("%10d%10d",ALE_SOLVER_MMALE, ALE_SURF_SETID);
}

